import { Request } from "har-format";
import { assert } from "chai";
import isGraphQLRequest from "./is-graphql-request";

describe("Should return true", () => {
  const cases = [
    {
      request: JSON.parse(
        '{"method":"POST","url":"https://svasura.l-e101.com/appbuilder","httpVersion":"http/2.0","headers":[{"name":":method","value":"POST"},{"name":":authority","value":"svasura.l-e101.com"},{"name":":scheme","value":"https"},{"name":":path","value":"/appbuilder"},{"name":"content-length","value":"1331"},{"name":"pragma","value":"no-cache"},{"name":"cache-control","value":"no-cache"},{"name":"sec-ch-ua","value":"\\"Chromium\\";v=\\"92\\", \\" Not A;Brand\\";v=\\"99\\", \\"Google Chrome\\";v=\\"92\\""},{"name":"accept","value":"*/*"},{"name":"authorization","value":""},{"name":"sec-ch-ua-mobile","value":"?0"},{"name":"user-agent","value":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"},{"name":"content-type","value":"application/json"},{"name":"origin","value":"https://app-builder.d-e102.com"},{"name":"sec-fetch-site","value":"cross-site"},{"name":"sec-fetch-mode","value":"cors"},{"name":"sec-fetch-dest","value":"empty"},{"name":"referer","value":"https://app-builder.d-e102.com/"},{"name":"accept-encoding","value":"gzip, deflate, br"},{"name":"accept-language","value":"en-SE,en-US;q=0.9,en-GB;q=0.8,en;q=0.7,sv;q=0.6"}],"queryString":[],"cookies":[],"headersSize":-1,"bodySize":1331,"postData":{"mimeType":"application/json","text":"{\\"operationName\\":\\"getOverview\\",\\"variables\\":{},\\"query\\":\\"query getOverview {\\\\n  SymbolLibrary {\\\\n    edges {\\\\n      node {\\\\n        ...SymbolLibraryDetails\\\\n        __typename\\\\n      }\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n  App {\\\\n    edges {\\\\n      node {\\\\n        ...AppDetails\\\\n        __typename\\\\n      }\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment SymbolLibraryDetails on SymbolLibrary {\\\\n  id\\\\n  name\\\\n  roots\\\\n  updated_at\\\\n  symbols {\\\\n    edges {\\\\n      node {\\\\n        ...SymbolGroupListItem\\\\n        ...SymbolListItem\\\\n        __typename\\\\n      }\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment SymbolGroupListItem on SymbolGroup {\\\\n  id\\\\n  name\\\\n  children\\\\n  updated_at\\\\n  __typename\\\\n}\\\\n\\\\nfragment SymbolListItem on Symbol {\\\\n  id\\\\n  name\\\\n  updated_at\\\\n  __typename\\\\n}\\\\n\\\\nfragment AppDetails on App {\\\\n  id\\\\n  name\\\\n  roots\\\\n  updated_at\\\\n  views {\\\\n    edges {\\\\n      node {\\\\n        ...ViewGroupListItem\\\\n        ...ViewListItem\\\\n        __typename\\\\n      }\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n  rootView {\\\\n    id\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment ViewGroupListItem on ViewGroup {\\\\n  id\\\\n  name\\\\n  children\\\\n  updated_at\\\\n  __typename\\\\n}\\\\n\\\\nfragment ViewListItem on View {\\\\n  id\\\\n  name\\\\n  updated_at\\\\n  variables\\\\n  __typename\\\\n}\\\\n\\"}"}}'
      ) as Request,
    },
    {
      request: JSON.parse(
        '{"method":"POST","url":"https://tdkovkxitnbctfibagdtcbhn34.appsync-api.eu-west-1.amazonaws.com/graphql","httpVersion":"http/2.0","headers":[{"name":":method","value":"POST"},{"name":":authority","value":"tdkovkxitnbctfibagdtcbhn34.appsync-api.eu-west-1.amazonaws.com"},{"name":":scheme","value":"https"},{"name":":path","value":"/graphql"},{"name":"content-length","value":"202"},{"name":"pragma","value":"no-cache"},{"name":"cache-control","value":"no-cache"},{"name":"sec-ch-ua","value":"\\"Chromium\\";v=\\"92\\", \\" Not A;Brand\\";v=\\"99\\", \\"Google Chrome\\";v=\\"92\\""},{"name":"accept","value":"application/json, text/plain, */*"},{"name":"x-amz-user-agent","value":"aws-amplify/4.0.3 js"},{"name":"authorization","value":"eyJraWQiOiIyeU0yVm1WQjZcL01WUE9xXC9GN01pWHg2T0ViMjVhZVBhcHFvM0NJTUNocW89IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIzMGRkNzYwNS1kZjlkLTQyZmMtYmVmNC1hYmY1OGU0NTRiYWMiLCJjb2duaXRvOmdyb3VwcyI6WyJBZG1pbiIsIlRQQyJdLCJldmVudF9pZCI6IjEwODgwOTE3LWYwY2UtNGJlNC1hZGNkLWRmZDFiYzQxMThiZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2MjkxMjQwODgsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xXzFxdWQ1S1hEayIsImV4cCI6MTYyOTQwNjY3NiwiaWF0IjoxNjI5NDAzMDc2LCJqdGkiOiI5NzM2YzNmMS05YmY2LTQwZGYtYTc0Yy04ODBiYWRlNmJiN2IiLCJjbGllbnRfaWQiOiIzM2l1bzc1dW0yZ2xuY3N1cm9tZmNmc3QwNyIsInVzZXJuYW1lIjoiMzBkZDc2MDUtZGY5ZC00MmZjLWJlZjQtYWJmNThlNDU0YmFjIn0.f5kWNmvq_R_SVWzasz6wSjgTR5na7UzrI3dTIQo3swWOf1LIM3EzjGEXItWZq0XWDDVa8uZpVeXuNnWLsonfspGoB0Kn2JmHwrZA0ji2yVF2ukJKMLAHFDtU7Fi8_2G4_QrX4pP4WYumS9v2YiZi53Ff_ksUsjbxE6ki7xEKSJ6Z5f1lEx8PQUABFcT7pIzFyppiI5rkVe1GfNpwMJjHnWlrdc8XftI_HX403TzNH56_4MaSDn0-86AdRwYqf1IJ7m0s_MzOyodYsGMLmfxzHqemCRzHXvhSRwWj249Ppb6LQ-hKYlmZFp06NvaBl11u5JlaKmOGRMK_w3T4_qHsoA"},{"name":"sec-ch-ua-mobile","value":"?0"},{"name":"user-agent","value":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"},{"name":"content-type","value":"application/json; charset=UTF-8"},{"name":"origin","value":"https://app-builder.d-e102.com"},{"name":"sec-fetch-site","value":"cross-site"},{"name":"sec-fetch-mode","value":"cors"},{"name":"sec-fetch-dest","value":"empty"},{"name":"referer","value":"https://app-builder.d-e102.com/"},{"name":"accept-encoding","value":"gzip, deflate, br"},{"name":"accept-language","value":"en-SE,en-US;q=0.9,en-GB;q=0.8,en;q=0.7,sv;q=0.6"}],"queryString":[],"cookies":[],"headersSize":-1,"bodySize":202,"postData":{"mimeType":"application/json; charset=UTF-8","text":"{\\"query\\":\\"{\\\\n  listCatalogItems {\\\\n    items {\\\\n      description\\\\n      version\\\\n      name\\\\n      sourceVersionId\\\\n      sourceVersion {\\\\n        connectorId\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\",\\"variables\\":{}}"}}'
      ) as Request,
    },
    {
      request: JSON.parse(
        '{"method":"POST","url":"https://swapi-graphql.netlify.app/.netlify/functions/index","httpVersion":"http/2.0","headers":[{"name":":method","value":"POST"},{"name":":authority","value":"swapi-graphql.netlify.app"},{"name":":scheme","value":"https"},{"name":":path","value":"/.netlify/functions/index"},{"name":"content-length","value":"980"},{"name":"pragma","value":"no-cache"},{"name":"cache-control","value":"no-cache"},{"name":"sec-ch-ua","value":"\\"Chromium\\";v=\\"92\\", \\" Not A;Brand\\";v=\\"99\\", \\"Google Chrome\\";v=\\"92\\""},{"name":"accept","value":"application/json"},{"name":"sec-ch-ua-mobile","value":"?0"},{"name":"user-agent","value":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"},{"name":"content-type","value":"application/json"},{"name":"origin","value":"https://graphql.org"},{"name":"sec-fetch-site","value":"cross-site"},{"name":"sec-fetch-mode","value":"cors"},{"name":"sec-fetch-dest","value":"empty"},{"name":"referer","value":"https://graphql.org/"},{"name":"accept-encoding","value":"gzip, deflate, br"},{"name":"accept-language","value":"en-SE,en-US;q=0.9,en-GB;q=0.8,en;q=0.7,sv;q=0.6"}],"queryString":[],"cookies":[],"headersSize":-1,"bodySize":980,"postData":{"mimeType":"application/json","text":"{\\"query\\":\\"query {\\\\n  allFilms{\\\\n    edges{\\\\n      node{\\\\n        episodeID\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\\n# Welcome to GraphiQL\\\\n#\\\\n# GraphiQL is an in-browser tool for writing, validating, and\\\\n# testing GraphQL queries.\\\\n#\\\\n# Type queries into this side of the screen, and you will see intelligent\\\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\\\n# validation errors highlighted within the text.\\\\n#\\\\n# GraphQL queries typically start with a \\\\\\"{\\\\\\" character. Lines that start\\\\n# with a # are ignored.\\\\n#\\\\n# An example GraphQL query might look like:\\\\n#\\\\n#     {\\\\n#       field(arg: \\\\\\"value\\\\\\") {\\\\n#         subField\\\\n#       }\\\\n#     }\\\\n#\\\\n# Keyboard shortcuts:\\\\n#\\\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\\\n#\\\\n#     Merge Query:  Shift-Ctrl-M (or press the merge button above)\\\\n#\\\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\\\n#\\\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\\\n#\\\\n\\\\n\\",\\"variables\\":null}"}}'
      ) as Request,
    },
  ];
  cases.forEach(({ request }, i) => {
    it(`Case #${i}`, () => assert.isTrue(isGraphQLRequest(request)));
  });
});
